#!/usr/bin/env bash

#------------------------------------------------------------
#
# Ciro D. Santilli
#
# This regroups many cheatsheets (standard commands) that were 
# too small to deserve a whole file for them.
#
#------------------------------------------------------------

#1 data structures

# array
array1=( itm1 itm2 itm3 )
echo ${array1[1]}
echo ${array1[2]}
echo ${array1[3]}

array2[1]=itm1
array2[2]=itm2
array2[3]=itm3
echo ${array2[1]}
echo ${array2[2]}
echo ${array2[3]}

# associative array
declare -A aa
aa=([hello]=world [ab]=cd)
echo ${aa[hello]}
echo ${aa[cd]}

#1 control flow
var=true
if $var
then
  echo "var is true"
fi

# get the parent dir of a path, not / terminated except for /, no error checking
dirname /path/to/dir/or/file # /path/to/dir/or
dirname / # outputs /
dirname path/to/dir/or/file # path/to/dir/or

#1 user input

#2 while read case method
# ask for user input, break into cases
# if none of the cases is met, print error message and ask again.
while true; do
    read -p "Which case do you want? case a [a], case b [b], case c [c])" c 
    case "$c" in
      "a" ) echo "Action for case a"; break;;
      "b" ) echo "Action for case b"; break;;
      "c" ) echo "Action for case c"; break;;
      * ) echo "Does not match any of the possible cases. Try again."
    esac
done

#2 same as above, but for the ultra common case of yes [Y] no [n] case 
while true; do
    read -p "Yes or no? [Y/n]" yn
    case "$yn" in
        Y ) ; break;;
        n ) ; break;;
        * ) echo "Please enter either 'Y' or 'n'.";;
    esac
done

# GUI control

# control some window properties
wmctrl -a ' - GVIM' # focus on a window with title containing '- GVIM' ( hopefully gVim! )
