#!/usr/bin/env bash

set -u # error on undefined variable
set -e # stop execution if one command returns error

F="$(basename "$0")"
usage()
{
  echo "usage: $F latex-path-noext [aux-dir [out-dir]]

  wrapper for pdflatex.

EXAMPLES
  
  $F main tmp pdf
    #compiles main.tex
    #puts auxiliary files in ./tmp
    #output file in ./pdf

  $F main
    #compiles main.tex
    #puts auxiliary files in ./aux (default)
    #output files in ./out (default)

  
AUTHOR

  Ciro D. Santilli 
" 1>&2
}

if [ $# -gt 0 ]; then
  IN_NOEXT="$1"
  shift
else
  usage
  exit 1
fi

# optional positional arguments
AUX_DIR="./aux"
OUT_DIR="./out"

if [ $# -gt 0 ]; then
  AUX_DIR="$1"
  shift
fi

if [ $# -gt 0 ]; then
  OUT_DIR="$1"
  shift
fi

if [ $# -gt 0 ]; then
  usage
  exit 2
fi

mkdir -p "$AUX_DIR"
mkdir -p "$OUT_DIR"

# make pdf with bibtex and synctex
pdflatex -output-directory "$AUX_DIR" "$IN_NOEXT"
bibtex "$AUX_DIR"/"$IN_NOEXT"
pdflatex -interaction=nonstopmode -output-directory "$AUX_DIR" "$IN_NOEXT"
pdflatex -interaction=nonstopmode -output-directory "$AUX_DIR" -synctex=1 "$IN_NOEXT"

# pdf latex puts output and auxiliary files in the same place.
# this allows to separate them.
if [ "$AUX_DIR" != "$OUT_DIR"  ]; then
  OUT_PATH="$AUX_DIR"/"$IN_NOEXT".pdf
  mv "$OUT_PATH" "$OUT_DIR"
fi

exit 0
