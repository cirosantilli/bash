#!/usr/bin/env perl

use strict;
use warnings;

#replace.pl s/a/A 0 myfile.txt
##dry run. sample output
##
##myfile.txt
##3  asdfj aqwer
##3  Asdfj Aqwer
##
##myfile.txt
##5  asdfj aqwer
##5  Asdfj Aqwer
##
##where 3 and 5 are the line numbers
##
##there must be enough RAM to read each line
#
#replace.pl s/a/A 1 myfile.txt
##does the replace
##there must be enough RAM to read the entire file at once.

my $regex = $ARGV[0];
my $do_write = $ARGV[1];
my $file_path = $ARGV[2];

if ($do_write){
    open(FH, "+<".$file_path) or die "Opening: $!";
    my @array = <FH>;
    foreach my $line (@array) {
      chomp $line;
      $line =~ ($regex);
      $line .= "\n";
    }
    seek(FH,0,0)           or die "Seeking: $!";
    print FH @array        or die "Printing: $!";
    truncate(FH,tell(FH))  or die "Truncating: $!";
} else {
    open(FH, "<".$file_path) or die "Opening: $!";
    my $old;
    my $line;
    my $numsep = "  ";
    while($line = <FH>) {
      $old = $line;
      if ( $line =~ ($regex) ){
        print $file_path, $., $numsep, $old, "\n", $., $numsep, $_, "\n";
      }
    }
}

close(FH)              or die "Closing: $!";
exit 0;
