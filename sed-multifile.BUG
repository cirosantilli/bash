#!/usr/bin/env bash

#------------------------------------------------------------
#
# Ciro D. Santilli 
#
# Replaces with sed in multiple files
#
#------------------------------------------------------------

set -u # error on undefined variable
set -e # stop execution if one command goes wrong

usage()
{
  echo 'Usage: sed-multifile dotext find replace dosubstitute

Sample calls:

sed-multifile .py oldvarname newvarname 0 # just check, do not replace
#sed-multifile .py oldvarname newvarname 1 # replace!!!
'
}

# argument checking
if [ $# -ne 4 ]
then
  usage
  exit 1
else
  # get the commands
  PATH_END_WITH=$1
  SED_FIND=$2
  SED_REPLACE=$3
  if [ $4 -eq 0 ]
  then
    MAKE_CHANGES=$false
  else
    MAKE_CHANGES=$true
  fi

  # decide write to files or not
  if [ $MAKE_CHANGES ]
  then # don't replace
    find . -type f -name "*$PATH_END_WITH" -print0 | xargs -0 sed -n "s/$SED_FIND/$SED_REPLACE/gp"
  else # replace
    find . -type f -name "*$PATH_END_WITH" -print0 | xargs -0 sed -i "s/$SED_FIND/$SED_REPLACE/g"
  fi
  exit 0
fi
